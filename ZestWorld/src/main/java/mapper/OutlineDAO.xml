<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zestworld.OutlineDAO.IOutlineDAO">

	<select id="basictasklist" resultType="com.zestworld.Table_DTO.Task_DTO">
		select * from task
	</select>
	
	<select id="tasklist" resultType="com.zestworld.Table_DTO.Task_DTO">
		select * from task where success_f='0' order by enrolldate desc
	</select>
 
	<select id="taskTest" resultType="com.zestworld.Table_DTO.Task_DTO" parameterType="com.zestworld.Table_DTO.Task_DTO">
		
		 select * from task t where workspace_id=#{workspace_id} and enrolldate between #{filterDay} and sysdate  and  success_f=#{success_f}
		 
		<!-- select t.title,t.user_id,t.end_date, p.p_title ,t.project_id, t.task_id, t.success_f from task t , project p where enrolldate between #{filterDay} and sysdate  and  success_f=#{success_f} -->
		<if test="user_id!=null and user_id !=''">
			and user_id=#{user_id}
		</if>
		
		<if test="member!=null and member != ''">  <!-- 배정된 멤버  -->
			and member=#{member}
		</if>
		
		<if test="follower!=null and follower != ''">  <!-- 팔로워  -->
			and follower=#{follower}
		</if>
		<!-- 
		<if test="project_id!=null and project_id != ''">  팔로워 
			and project_id=#{project_id}
		</if>
		 -->
		<!-- <if test="success_f!=null and success_f != ''">  성공여부 
			and success_f=#{success_f}
		</if> -->
		<if test="order.equals('desc')">
		      order by enrolldate asc
		    </if>
		<if test="order.equals('asc')">
		      order by enrolldate desc
   	    </if>
		<!-- <choose>
		    <when test="order !=null and order !=''">
		      order by enrolldate asc
		    </when>
		    <otherwise>
		      order by enrolldate desc
   			</otherwise>
  		</choose> -->
		
	</select>
	
	<select id="projectlist" resultType="com.zestworld.Table_DTO.Project_DTO">
		
		select * from project
		
	</select> 
	
	<select id="writerlist" parameterType="int" resultType="com.zestworld.Table_DTO.WorkspaceUser_DTO">
		
		select user_id from workspace_user where workspace_id=#{workspace_id}
		
	</select> 
	
	<insert id="insertTask" parameterType="com.zestworld.Table_DTO.Task_DTO">
		insert into task(task_id,category_id,workspace_id,project_id,follower,user_id,title,end_date,success_f,enrolldate) values (task_seq.nextval,#{category_id},#{workspace_id},#{project_id},#{follower},#{user_id},#{title},#{end_date},'0',sysdate)
	</insert>

<!-- 	프로젝트에 속한 category name -->
	<select id ="categorylist" parameterType="int" resultType="com.zestworld.Table_DTO.Category_DTO">
		select category_id,title from category where project_id =#{projectId}
	</select>
<!-- 		
	task 테이블의 cate_id를 이용해서 c.title추출 (중복값 제거)
	<select id="catetitlelist" parameterType="com.zestworld.Table_DTO.category_DTO">
		select distinct c.title, c.cate from task t, category c where t.category_id=c.category_id
	</select>

 -->
	
	<select id ="detailTask" parameterType="String" resultType="com.zestworld.Table_DTO.Task_DTO">
		select * from task where task_id =#{task_id}
	</select>
	
	<!-- 업무상태 flag update -->
	<update id ="updateFlag" parameterType="String" >
		update task set success_f=1 where task_id=#{task_id}
	</update>
	
	<update id ="updateFlagZero" parameterType="String" >
		update task set success_f=0 where task_id=#{task_id}
	</update>
	
	<!-- 상세보기 수정 -->
	<update id ="detailUpdate" parameterType="com.zestworld.Table_DTO.Task_DTO" >
		update task set follower=#{follower},start_date=#{start_date},end_date=#{end_date},explain=#{explain} where task_id=#{task_id}
	</update>
	
	<!-- 업무 삭제 -->
	<update id ="detailDelete" >
		delete from task where task_id=#{task_id}
	</update>
	
	<!-- checkList 추가 -->
	<insert id ="checkListReg" parameterType="com.zestworld.Table_DTO.CheckList_DTO" >
		insert into checkList(check_id,task_id,contents,success_f) values (checklist_seq.nextval,#{task_id},#{contents},0)
	</insert>
	
	<!-- checkList 리스트 -->
	<select id ="checkListView" parameterType="int" resultType="com.zestworld.Table_DTO.CheckList_DTO" >
		select * from checkList where task_id=#{task_id}
	</select>
	
	<!-- checkList success_flag update-->
	<update id ="updateChkFlag" parameterType="int" >
		update checklist set success_f=1 where check_id=#{check_id}
	</update>
	
	<update id ="updateChkFlagZero" parameterType="int" >
		update checklist set success_f=0 where check_id=#{check_id}
	</update>
	
	<select id="assignMemberList" resultType="com.zestworld.Table_DTO.Users_DTO">
		select user_id from project p, project_user u where p.project_id=u.project_id and p.project_id=#{project_id}
	</select>
	
	<insert id ="assignMemberReg" parameterType="com.zestworld.Table_DTO.TaskAssignMember_DTO" >
		insert into taskAssignMember(task_id,user_id) values (#{task_id},#{user_id})
	</insert>
	
	<!-- 체크리스트 삭제 -->
	<delete id ="checkListDelete" >
		delete from checklist where check_id=#{check_id}
	</delete>
	
	
	<!-- 업무배정 멤버 리스트 -->
	<select id ="taskMemberList" resultType="com.zestworld.Table_DTO.TaskAssignMember_DTO" >
		select * from TaskAssignMember where task_id=#{task_id}
	</select>
	
	<!-- 업무 배정 멤버 삭제 -->
	<delete id ="deleteTaskMember"  >
		delete from TaskAssignMember where user_id=#{user_id}
	</delete>
</mapper>


